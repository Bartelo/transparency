// Generated by CoffeeScript 1.3.1
(function() {
  var Transparency;

  if (typeof module !== "undefined" && module !== null ? module.exports : void 0) {
    require('./spec_helper');
    Transparency = require('../src/transparency');
  }

  describe("Transparency", function() {
    it("should render values to form inputs and textarea elements", function() {
      var data, expected, template;
      template = $("<div>\n  <input name=\"name\" type=\"text\" />\n  <input name=\"job\" type=\"text\" />\n  <textarea name=\"resume\"></textarea>\n</div>");
      data = {
        name: 'John',
        job: 'Milkman',
        resume: "Jack of all trades"
      };
      expected = $("<div>\n  <input name=\"name\" type=\"text\" value=\"John\"/>\n  <input name=\"job\" type=\"text\" value=\"Milkman\"/>\n  <textarea name=\"resume\">Jack of all trades</textarea>\n</div>");
      template.render(data);
      return expect(template.html()).htmlToBeEqual(expected.html());
    });
    it("should render values to option elements", function() {
      var data, directives, expected, template;
      template = $("<form>\n  <select id=\"states\">\n    <option class=\"state\"></option>\n  </select>\n</form>");
      data = {
        states: [
          {
            id: 1,
            state: 'Alabama'
          }, {
            id: 2,
            state: 'Alaska'
          }, {
            id: 3,
            state: 'Arizona'
          }
        ]
      };
      directives = {
        states: {
          state: function() {
            return {
              value: this.id
            };
          }
        }
      };
      expected = $("<form>\n  <select id=\"states\">\n    <option class=\"state\" value=\"1\">Alabama</option>\n    <option class=\"state\" value=\"2\">Alaska</option>\n    <option class=\"state\" value=\"3\">Arizona</option>\n  </select>\n</form>");
      template.render(data, directives);
      return expect(template.html()).htmlToBeEqual(expected.html());
    });
    return it("should handle nested options elements", function() {
      var data, expected, template;
      template = $("<div class=\"container\">\n  <h1 class=\"title\"></h1>\n  <p class=\"post\"></p>\n  <select class=\"comments\">\n    <option class=\"comment\">test</option>\n  </select>\n</div>");
      data = {
        title: 'Hello World',
        post: 'Hi there it is me',
        comments: [
          {
            comment: 'John'
          }, {
            comment: 'Arnold'
          }
        ]
      };
      expected = $("<div class=\"container\">\n  <h1 class=\"title\">Hello World</h1>\n  <p class=\"post\">Hi there it is me</p>\n  <select class=\"comments\">\n    <option class=\"comment\">John</option>\n    <option class=\"comment\">Arnold</option>\n  </select>\n</div>");
      template.render(data);
      return expect(template.html()).htmlToBeEqual(expected.html());
    });
  });

}).call(this);
